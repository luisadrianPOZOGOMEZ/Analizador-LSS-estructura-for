
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIVIDE DOT EQUALS GT ID LBRACE LBRACKET LPAREN LT MINUS NOT NUM PLUS PR_ELSE PR_FOR PR_IF PR_RETURN PR_WHILE RBRACE RBRACKET RPAREN SEMICOLON STRING TIMES TYPE_INTprogram : statement_liststatement_list : statement\n                     | statement_list statementstatement : for_statement\n                | print_statementfor_statement : PR_FOR LPAREN TYPE_INT ID EQUALS NUM SEMICOLON ID LT NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE print_statement RBRACEprint_statement : ID DOT ID DOT ID LPAREN STRING RPAREN SEMICOLON'
    
_lr_action_items = {'PR_FOR':([0,2,3,4,5,8,24,33,],[6,6,-2,-4,-5,-3,-7,-6,]),'ID':([0,2,3,4,5,8,10,11,14,19,24,26,31,33,],[7,7,-2,-4,-5,-3,12,13,16,21,-7,27,7,-6,]),'$end':([1,2,3,4,5,8,24,33,],[0,-1,-2,-4,-5,-3,-7,-6,]),'LPAREN':([6,16,],[9,18,]),'DOT':([7,12,],[10,14,]),'TYPE_INT':([9,],[11,]),'EQUALS':([13,],[15,]),'NUM':([15,23,],[17,25,]),'SEMICOLON':([17,22,25,],[19,24,26,]),'STRING':([18,],[20,]),'RPAREN':([20,29,],[22,30,]),'LT':([21,],[23,]),'RBRACE':([24,32,],[-7,33,]),'PLUS':([27,28,],[28,29,]),'LBRACE':([30,],[31,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,],[2,]),'statement':([0,2,],[3,8,]),'for_statement':([0,2,],[4,4,]),'print_statement':([0,2,31,],[5,5,32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','main.py',63),
  ('statement_list -> statement','statement_list',1,'p_statement_list','main.py',66),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','main.py',67),
  ('statement -> for_statement','statement',1,'p_statement','main.py',70),
  ('statement -> print_statement','statement',1,'p_statement','main.py',71),
  ('for_statement -> PR_FOR LPAREN TYPE_INT ID EQUALS NUM SEMICOLON ID LT NUM SEMICOLON ID PLUS PLUS RPAREN LBRACE print_statement RBRACE','for_statement',18,'p_for_statement','main.py',74),
  ('print_statement -> ID DOT ID DOT ID LPAREN STRING RPAREN SEMICOLON','print_statement',9,'p_print_statement','main.py',83),
]
